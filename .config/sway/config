# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | wofi --show=drun | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Downloads/pexel.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
output HDMI-A-1 resolution 3440x1440 position 3440,0
# output HDMI-A-1 modeline 289.50  3272 3320 3352 3432  1368 1371 1381 1407 +hsync -vsync
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
input "type:keyboard" {
    xkb_options caps:ctrl_modifier,ctrl:swap_lwin_lctl
}
input "type:pointer" {
    accel_profile flat
    pointer_accel 0
}
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    # bindsym $mod+Shift+q kill
    # bindsym $mod+c kill
    bindsym $mod+BackSpace kill

    # Start your launcher
    # bindsym $mod+d exec $menu
    bindsym Mod1+space exec $menu
    # bindsym $mod+shift+b exec firefox

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal
    # 新窗口方向
    default_orientation horizontal
    # 边框样
    default_border pixel 3
    default_floating_border pixel 3
    # gaps horizontal 4
    # gaps vertical 4
    gaps inner 5
    # hide_edge_borders smart


    workspace_auto_back_and_forth true
    # Reload the configuration file
    bindsym $mod+Shift+r reload
    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    bindsym $mod+semicolon focus next
    bindsym $mod+comma focus prev

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # " . "
    bindsym $mod+period workspace back_and_forth
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+v splith
    bindsym $mod+s splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen toggle

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # " ' "
    bindsym $mod+apostrophe focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+p scratchpad show
#
# Resizing containers:
#
mode "SetMark" {
    bindsym a mark --add --replace a ; mode "default"
    bindsym b mark --add --replace b ; mode "default"
    bindsym c mark --add --replace c ; mode "default"
    bindsym d mark --add --replace d ; mode "default"
    bindsym e mark --add --replace e ; mode "default"
    bindsym f mark --add --replace f ; mode "default"
    bindsym g mark --add --replace g ; mode "default"
    bindsym h mark --add --replace h ; mode "default"
    bindsym i mark --add --replace i ; mode "default"
    bindsym j mark --add --replace j ; mode "default"
    bindsym k mark --add --replace k ; mode "default"
    bindsym l mark --add --replace l ; mode "default"
    bindsym m mark --add --replace m ; mode "default"
    bindsym n mark --add --replace n ; mode "default"
    bindsym o mark --add --replace o ; mode "default"
    bindsym p mark --add --replace p ; mode "default"
    bindsym q mark --add --replace q ; mode "default"
    bindsym r mark --add --replace r ; mode "default"
    bindsym s mark --add --replace s ; mode "default"
    bindsym t mark --add --replace t ; mode "default"
    bindsym u mark --add --replace u ; mode "default"
    bindsym v mark --add --replace v ; mode "default"
    bindsym w mark --add --replace w ; mode "default"
    bindsym x mark --add --replace x ; mode "default"
    bindsym y mark --add --replace y ; mode "default"
    bindsym z mark --add --replace z ; mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "MoveToMark" {
    bindsym a move container to mark a ; mode "default"
    bindsym b move container to mark b ; mode "default"
    bindsym c move container to mark c ; mode "default"
    bindsym d move container to mark d ; mode "default"
    bindsym e move container to mark e ; mode "default"
    bindsym f move container to mark f ; mode "default"
    bindsym g move container to mark g ; mode "default"
    bindsym h move container to mark h ; mode "default"
    bindsym i move container to mark i ; mode "default"
    bindsym j move container to mark j ; mode "default"
    bindsym k move container to mark k ; mode "default"
    bindsym l move container to mark l ; mode "default"
    bindsym m move container to mark m ; mode "default"
    bindsym n move container to mark n ; mode "default"
    bindsym o move container to mark o ; mode "default"
    bindsym p move container to mark p ; mode "default"
    bindsym q move container to mark q ; mode "default"
    bindsym r move container to mark r ; mode "default"
    bindsym s move container to mark s ; mode "default"
    bindsym t move container to mark t ; mode "default"
    bindsym u move container to mark u ; mode "default"
    bindsym v move container to mark v ; mode "default"
    bindsym w move container to mark w ; mode "default"
    bindsym x move container to mark x ; mode "default"
    bindsym y move container to mark y ; mode "default"
    bindsym z move container to mark z ; mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "SwapToMark" {
    bindsym a swap container with mark a ; mode "default"
    bindsym b swap container with mark b ; mode "default"
    bindsym c swap container with mark c ; mode "default"
    bindsym d swap container with mark d ; mode "default"
    bindsym e swap container with mark e ; mode "default"
    bindsym f swap container with mark f ; mode "default"
    bindsym g swap container with mark g ; mode "default"
    bindsym h swap container with mark h ; mode "default"
    bindsym i swap container with mark i ; mode "default"
    bindsym j swap container with mark j ; mode "default"
    bindsym k swap container with mark k ; mode "default"
    bindsym l swap container with mark l ; mode "default"
    bindsym m swap container with mark m ; mode "default"
    bindsym n swap container with mark n ; mode "default"
    bindsym o swap container with mark o ; mode "default"
    bindsym p swap container with mark p ; mode "default"
    bindsym q swap container with mark q ; mode "default"
    bindsym r swap container with mark r ; mode "default"
    bindsym s swap container with mark s ; mode "default"
    bindsym t swap container with mark t ; mode "default"
    bindsym u swap container with mark u ; mode "default"
    bindsym v swap container with mark v ; mode "default"
    bindsym w swap container with mark w ; mode "default"
    bindsym x swap container with mark x ; mode "default"
    bindsym y swap container with mark y ; mode "default"
    bindsym z swap container with mark z ; mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+m unmark
show_marks yes

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym q mode "default"
}
bindsym $mod+r mode "resize"


# '[' ']'
bindsym $mod+bracketleft opacity plus 0.1
bindsym $mod+bracketright opacity minus 0.1

# '/'
bindsym $mod+slash splitt
# '\'
bindsym $mod+backslash layout toggle all

bindsym $mod+bar layout default

mode "MoveWindowMode" {
    bindsym $left move left
    bindsym $down move down
    bindsym $up move up
    bindsym $right move right
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym q mode "default"
}
bindsym $mod+m mode "MoveWindowMode"

mode "movewindow-workspace-focus" {
    bindsym 1 move container to workspace number 1 ; workspace number 1 ; mode "default"
    bindsym 2 move container to workspace number 2 ; workspace number 2 ; mode "default"
    bindsym 3 move container to workspace number 3 ; workspace number 3 ; mode "default"
    bindsym 4 move container to workspace number 4 ; workspace number 4 ; mode "default"
    bindsym 5 move container to workspace number 5 ; workspace number 5 ; mode "default"
    bindsym 6 move container to workspace number 6 ; workspace number 6 ; mode "default"
    bindsym 7 move container to workspace number 7 ; workspace number 7 ; mode "default"
    bindsym 8 move container to workspace number 8 ; workspace number 8 ; mode "default"
    bindsym 9 move container to workspace number 9 ; workspace number 9 ; mode "default"
    bindsym 0 move container to workspace number 10 ; workspace number 10 ; mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym q mode "default"
}
bindsym $mod+g mode "movewindow-workspace-focus"

mode "movewindow-workspace" {
    bindsym 1 move container to workspace number 1 ; mode "default"
    bindsym 2 move container to workspace number 2 ; mode "default"
    bindsym 3 move container to workspace number 3 ; mode "default"
    bindsym 4 move container to workspace number 4 ; mode "default"
    bindsym 5 move container to workspace number 5 ; mode "default"
    bindsym 6 move container to workspace number 6 ; mode "default"
    bindsym 7 move container to workspace number 7 ; mode "default"
    bindsym 8 move container to workspace number 8 ; mode "default"
    bindsym 9 move container to workspace number 9 ; mode "default"
    bindsym 0 move container to workspace number 10 ; mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym q mode "default"
}

mode "leadermode" {
    bindsym w mode "movewindow-workspace"

    bindsym $left move left ; mode "default"
    bindsym $down move down ; mode "default"
    bindsym $up move up ; mode "default"
    bindsym $right move right ; mode "default"

    bindsym d kill;mode "default"
    bindsym f floating toggle; mode "default"
    bindsym r reload; mode "default"
    # 置顶
    bindsym t sticky toggle; mode "default"
    bindsym m mode "SetMark"
    bindsym g mode "MoveToMark"
    bindsym s mode "SwapToMark"

    bindsym q mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+space mode "leadermode"

# client.focused "#F73D93" "#EEB0B0" "#BDE6F1" "#000000"
client.focused "#42C2FF" "#42C2FF" "#ffffff" "#F32424"
client.focused_inactive "#00000000" "#00000000" "#ffffff" "00000000"
client.unfocused "#00000000" "#00000000" "#ffffff" "00000000"
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    swaybar_command waybar
    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
#   status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

#   colors {
#       statusline #ffffff
#       background #323232
#       inactive_workspace #32323200 #32323200 #5c5c5c
#   }
}

include /etc/sway/config.d/*
